// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalFinanceTrackerDataAccess.DataAccessContext;

#nullable disable

namespace PersonalFinanceTrackerDataAccess.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20250306192703_OptimiseVarcharMaxFields")]
    partial class OptimiseVarcharMaxFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId")
                        .IsUnique()
                        .HasFilter("[FamilyId] IS NOT NULL");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.CategoryBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryBudgets");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("FamilyLeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyLeaderId")
                        .IsUnique();

                    b.ToTable("Families");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasDiscriminator().HasValue("Transaction");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.RecurringTransaction", b =>
                {
                    b.HasBaseType("PersonalFinanceTrackerDataAccess.Entities.Transaction");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NextOccurrenceDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("RecurringTransaction");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Budget", b =>
                {
                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.Family", "Family")
                        .WithOne("GeneralBudget")
                        .HasForeignKey("PersonalFinanceTrackerDataAccess.Entities.Budget", "FamilyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.User", "User")
                        .WithOne("PersonalBudget")
                        .HasForeignKey("PersonalFinanceTrackerDataAccess.Entities.Budget", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Family");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.CategoryBudget", b =>
                {
                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.Budget", "Budget")
                        .WithMany("CategoryBudgets")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.Category", "Category")
                        .WithMany("CategoryBudgets")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Family", b =>
                {
                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.User", "FamilyLeader")
                        .WithOne()
                        .HasForeignKey("PersonalFinanceTrackerDataAccess.Entities.Family", "FamilyLeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FamilyLeader");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Transaction", b =>
                {
                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.Budget", null)
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetId");

                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.User", b =>
                {
                    b.HasOne("PersonalFinanceTrackerDataAccess.Entities.Family", "Family")
                        .WithMany("Members")
                        .HasForeignKey("FamilyId");

                    b.Navigation("Family");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Budget", b =>
                {
                    b.Navigation("CategoryBudgets");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Category", b =>
                {
                    b.Navigation("CategoryBudgets");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.Family", b =>
                {
                    b.Navigation("GeneralBudget");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("PersonalFinanceTrackerDataAccess.Entities.User", b =>
                {
                    b.Navigation("PersonalBudget");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
